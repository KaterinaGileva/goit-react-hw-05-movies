{"version":3,"file":"static/js/387.33010734.chunk.js","mappings":"wRAEaA,EAASC,EAAAA,GAAAA,GAAH,iNAUNC,EAASD,EAAAA,GAAAA,GAAH,2WAYNE,EAAUF,EAAAA,GAAAA,IAAH,2KAUPG,EAAWH,EAAAA,GAAAA,EAAH,gO,SCzBN,SAASI,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBE,OAdFC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GACLO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAQI,EAAKL,KAA3B,IACLM,OAAM,SAAAC,GAAK,OACVC,IAAAA,OAAAA,QACE,oDAFQ,GAKf,GAAE,CAACX,KAOA,+BACE,SAACN,EAAD,UACCS,EAAKS,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IACEH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKJ,EACLK,MAAO,WAET,SAACrB,EAAD,UAAWgB,KACX,SAAChB,EAAD,UAAWiB,MAXAf,EADL,OAkBjB,C,sKC/CKoB,EAAW,gCACXC,EAAU,4CAEHC,EAAc,kBACzBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,2BAAwCC,GADf,EAGdG,EAAe,SAAAC,GAAO,OACjCF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BK,GAA9B,OAAwCJ,GADP,EAGtBK,EAAmB,SAAAC,GAAK,OACnCJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uBAAoCC,EAApC,kBAAqDM,GADlB,EAGxBrB,EAAU,SAAAmB,GAAO,OAC5BF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BK,EAA9B,mBAAgDJ,GADpB,EAGfO,EAAa,SAAAH,GAAO,OACjCF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BK,EAA9B,mBAAgDJ,GADf,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastUl = styled.ul`\n  padding: 20px 0 0 0;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  \n  list-style: none;\n`;\n\nexport const CastLi = styled.li`\n  border: 5px solid blue;\n  border-radius: 8px;\n  background-color:white;\n  box-shadow: 0px 4px 3px 0px rgba(246, 0, 0, 0.6),\n    4px 4px 4px 0px rgba(246, 247, 245, 0.4), 0px 2px 1px -1px rgba(246, 247, 245, 0.4);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      transform: scale(1.02);\n      }\n`;\nexport const CastImg = styled.img`\n  display: block;\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  overflow: hidden;\n  border-radius: 8px;\n  background-color: white;\n`;\n\nexport const CastText = styled.p`\n  padding: 0 15px;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 700;\n  color: #0B0B61;\n  \n`;","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'service/API';\nimport Notiflix from \"notiflix\";\nimport NoImage from 'images/noImag.png';\nimport { CastImg, CastLi, CastText, CastUl } from './Cast.styled';\n\n\nexport default function Cast() {\n  const { id } = useParams();\n  \n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCast(id)\n      .then(({ data }) => setCast(data.cast))\n      .catch(error =>\n        Notiflix.Notify.warning(\n          'Sorry, something went wrong.... Please try again.'\n        )\n      );\n  }, [id]);\n\n  //if (!cast) {\n  //  return null;\n // }\n\n    return (\n      <>\n        <CastUl>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <CastLi key={id}>\n            <CastImg\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : NoImage\n              }\n              alt={name}\n              width={'300px'}\n            />\n            <CastText>{name}</CastText>\n            <CastText>{character}</CastText>\n          </CastLi>\n        ))}\n      </CastUl>\n            </>      \n    )     \n};\n  \n  ","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '?api_key=0fe38363eb34760457702cbb346d2d7a';\n\nexport const getTrending = () =>\n  axios.get(`${BASE_URL}trending/all/day${API_KEY}`);\n\nexport const getMovieById = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}${API_KEY}`);\n\nexport const getMovieBySearch = query =>\n  axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`);\n\nexport const getCast = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/credits${API_KEY}`);\n  \n  export const getReviews = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/reviews${API_KEY}`);"],"names":["CastUl","styled","CastLi","CastImg","CastText","Cast","id","useParams","useState","cast","setCast","useEffect","getCast","then","data","catch","error","Notiflix","map","profile_path","name","character","src","NoImage","alt","width","BASE_URL","API_KEY","getTrending","axios","getMovieById","movieId","getMovieBySearch","query","getReviews"],"sourceRoot":""}