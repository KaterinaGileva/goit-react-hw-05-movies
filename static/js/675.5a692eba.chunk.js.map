{"version":3,"file":"static/js/675.5a692eba.chunk.js","mappings":"6LAAA,IAAMA,EAAS,CACX,CAAEC,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,GAAIC,KAAM,YAGLC,EAAY,WACvB,OAAOC,QAAQC,QAAQL,EACxB,EAEYM,EAAe,SAACC,GAC3B,OAAOH,QAAQC,QAAQL,EAAOQ,MAAK,SAACC,GAAD,OAAWA,EAAMR,KAAOM,CAAxB,IACpC,C,mHChBUG,EAAY,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OACpBW,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGZ,EAAOa,KAAI,SAACJ,GAAD,OACT,yBACC,SAAC,KAAD,CAAMK,GAAE,UAAKL,EAAMR,IAAMc,MAAO,CAAEC,KAAML,GAAxC,SAEGF,EAAMP,QAHDO,EAAMR,GADN,KASjB,EChBD,GAAiB,ECGJgB,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACJ,oBAAQC,UAAWC,EAAAA,OAAnB,WAEQ,mBAAQC,KAAK,SACLF,UAAWC,EAAAA,OADnB,qBAOC,kBACGD,UAAWC,EAAAA,MACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZP,MAAOA,EACPC,SAAU,SAACO,GAAD,OAAOP,EAASO,EAAEC,OAAOT,MAAzB,MAOnB,E,SCaH,EAjCe,WAAO,IAAD,EAGnB,GAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAElDC,EAAAA,EAAAA,YAAU,YACRhC,EAAAA,EAAAA,KAAYiC,KAAKP,EAClB,GAAE,IACHQ,QAAQC,IAAI,SAAUtC,GAEtB,IAAMuC,GAAgBC,EAAAA,EAAAA,UAAQ,WAC1B,OAAOxC,EAAOyC,QAAO,SAAAhC,GAAK,OAC1BA,EAAMP,KAAKwC,cAAcC,SAASV,EAAUS,cADlB,GAG3B,GAAE,CAAC1C,EAAQiC,IAOZ,OACE,6BACE,SAAChB,EAAD,CAAWC,MAAOe,EAAWd,SAPP,SAACD,GAE1Bc,EAD8B,KAAVd,EAAe,CAAEuB,OAAQvB,GAAW,CAAC,EAE1D,IAKKqB,EAAcK,OAAS,IACxB,SAAClC,EAAD,CAAWV,OAAQuC,MAIxB,C","sources":["API.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.module.css","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const movies = [\n    { id: 1, name: \"Hoodie 1\" },\n    { id: 2, name: \"Hoodie 2\" },\n    { id: 3, name: \"Hoodie 3\" },\n    { id: 4, name: \"Sneakers 1\" },\n    { id: 5, name: \"Sneakers 2\" },\n    { id: 6, name: \"Sneakers 3\" },\n    { id: 7, name: \"Sneakers 4\" },\n    { id: 8, name: \"Pants 1\" },\n    { id: 9, name: \"Pants 2\" },\n    { id: 10, name: \"Pants 3\" }\n  ];\n  \n  export const getMovies = () => {\n    return Promise.resolve(movies);\n  };\n  \n  export const getMovieById = (movieId) => {\n    return Promise.resolve(movies.find((movie) => movie.id === movieId));\n  };\n  ","import { Link, useLocation } from \"react-router-dom\";\n\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {movies.map((movie) => (\n         <li key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n          \n            {movie.name}</Link>\n          </li>\n      ))}\n    </ul>\n  );\n};\n ","// extracted by mini-css-extract-plugin\nexport default {};","import css from \"./SearchBox.module.css\"\n\n//const styles = { form: { marginBottom: 20 } };\n\nexport const SearchBox = ({ value, onChange }) => {\n    return (\n<header className={css.header}>\n      \n        <button type=\"submit\"\n                className={css.button}>\n\n          search\n\n        </button>\n        \n         <input\n            className={css.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n      \n      </header>\n\n      \n    );\n  };\n  ","import { getMovies } from \"API\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { useMemo } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {  useSearchParams } from \"react-router-dom\";\n//import { useLocation } from \"react-router-dom\";\n\n\nconst Movies = () => {\n  //const movies = getMovies();\n  //const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get(\"filter\") ?? \"\";\n\nuseEffect(() => {\n  getMovies().then(setMovies);\n}, []);\nconsole.log('movies', movies);\n\nconst visibleMovies = useMemo(() => {\n    return movies.filter(movie =>\n    movie.name.toLowerCase().includes(movieName.toLowerCase())\n  );\n  }, [movies, movieName]);\n\n  const updateQueryString = (value) => {\n    const nextParams = value !== \"\" ? { filter: value  } : {};\n   setSearchParams(nextParams);\n };\n\n  return (\n    <main>\n      <SearchBox value={movieName} onChange={updateQueryString} />\n      {visibleMovies.length > 0 && ( \n      <MovieList movies={visibleMovies} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["movies","id","name","getMovies","Promise","resolve","getMovieById","movieId","find","movie","MovieList","location","useLocation","map","to","state","from","SearchBox","value","onChange","className","css","type","autoComplete","autoFocus","placeholder","e","target","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","then","console","log","visibleMovies","useMemo","filter","toLowerCase","includes","length"],"sourceRoot":""}